// Terminal library | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// This module provides ANSI terminal rendering of a text-based scenegraph. Unlike curses/ncurses, it doesn't provide much in the way of window borders or other UI framing; it just gives you a
// way to manage a layered display of information in various colors. Its data structure is a simple XML-style tree of stuff:

// | {text: 'foo bar bif',
//    children: [{bold: true, color: 34, position: [4, 4], text: 'foo bar bif'}, ...]}

// It takes care of a few things for you, perhaps the most helpful being text-boxing. If there are newlines in your text, then they will wrap back to the X-position of that text. So, for example,
// you could do this:

// | {text: 'foo\nbar\nbif', position: [10, 3]}           (1, 1) corner
//                                                        |
//                                                        |         foo
//                                                        |         bar    <- bar inherits foo's left position
//                                                        |         bif

// Supported attributes.
// Most ANSI stuff is supported one way or another. Terminal colors are available as numeric codes with no support for 256-color xterm extensions (perhaps later if I find a compelling use case
// for it). This library takes care of all positioning-related stuff, though it's up to you to wrap text accordingly. This can be resolved by running some text through a box-trim filter, which
// will make sure that it resides within a given area.

// Overlays.
// You can construct overlays that do various things with content underneath. The simplest case is masking, which just covers stuff up. The other possibility is a transparent overlay, which
// applies some transformation to the content beneath it before overlaying its text.
// Generated by SDoc 
